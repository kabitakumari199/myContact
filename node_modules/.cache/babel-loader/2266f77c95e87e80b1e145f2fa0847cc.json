{"ast":null,"code":"import _defineProperty from \"/var/www/html/my-contact/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  contacts: []\n};\n\nconst fetchContactReducer = (state = initialState, action) => {\n  console.log('its data type is', typeof action.contacts);\n\n  switch (action.type) {\n    case 'FETCH_CONTACTS':\n      {\n        return _objectSpread({}, state, {\n          contacts: action.contacts\n        });\n      }\n\n    case 'DELETE_CONTACT':\n      {\n        console.log('post id', action.id);\n\n        if (id === item._id) {\n          data.splice(index, 1);\n        }\n\n        return _objectSpread({}, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchContactReducer;","map":{"version":3,"sources":["/var/www/html/my-contact/src/reducers/fechContactReducer.js"],"names":["initialState","contacts","fetchContactReducer","state","action","console","log","type","id","item","_id","data","splice","index"],"mappings":";;;;;;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC;AADQ,CAArB;;AAIA,MAAMC,mBAAmB,GAAE,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAA8B;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,OAAOF,MAAM,CAACH,QAA9C;;AACD,UAAOG,MAAM,CAACG,IAAd;AACI,SAAK,gBAAL;AAAsB;AAClB,iCACOJ,KADP;AACcF,UAAAA,QAAQ,EAACG,MAAM,CAACH;AAD9B;AAEH;;AACD,SAAK,gBAAL;AAAsB;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAM,CAACI,EAA7B;;AACA,YAAGA,EAAE,KAAKC,IAAI,CAACC,GAAf,EAAmB;AACfC,UAAAA,IAAI,CAACC,MAAL,CAAYC,KAAZ,EAAkB,CAAlB;AACA;;AACJ,iCACGV,KADH;AAQH;;AACD;AACA,aAAOA,KAAP;AApBJ;AAuBH,CAzBD;;AA4BA,eAAeD,mBAAf","sourcesContent":["\r\n\r\nconst initialState = {\r\n    contacts:[]\r\n}\r\n\r\nconst fetchContactReducer =(state=initialState, action)=>{\r\n     console.log('its data type is', typeof action.contacts);\r\n    switch(action.type){\r\n        case 'FETCH_CONTACTS':{\r\n            return {\r\n                ...state, contacts:action.contacts };\r\n        }\r\n        case 'DELETE_CONTACT':{\r\n            console.log('post id',action.id);\r\n            if(id === item._id){\r\n                data.splice(index,1);\r\n               }\r\n            return {\r\n            ...state,\r\n            // contacts : state.contacts.map(user =>\r\n            //     user.id === action.id\r\n            //       ? { ...user, deleting: true }\r\n            //       : user\r\n            //   )\r\n            }\r\n        }\r\n        default:\r\n        return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default fetchContactReducer;"]},"metadata":{},"sourceType":"module"}