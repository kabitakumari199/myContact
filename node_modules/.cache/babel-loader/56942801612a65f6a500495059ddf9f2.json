{"ast":null,"code":"import _defineProperty from \"/var/www/html/my-contact/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  contacts: [],\n  totalCount: []\n};\n\nconst fetchContactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_CONTACTS':\n      {\n        return _objectSpread({}, state, {\n          contacts: action.contacts\n        });\n      }\n\n    case 'DELETE_CONTACT':\n      {\n        var data = state.contacts;\n        data.map(function (user, index) {\n          if (action.id === user.id) {\n            data.splice(index, 1);\n          }\n        });\n        return _objectSpread({}, state, {\n          contacts: data\n        });\n      }\n\n    case 'FETCH_COUNT':\n      {\n        return _objectSpread({}, state, {\n          totalCount: action.totalCount\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchContactReducer;","map":{"version":3,"sources":["/var/www/html/my-contact/src/reducers/fechContactReducer.js"],"names":["initialState","contacts","totalCount","fetchContactReducer","state","action","type","data","map","user","index","id","splice"],"mappings":";;;;;;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,UAAU,EAAC;AAFM,CAArB;;AAKA,MAAMC,mBAAmB,GAAE,CAACC,KAAK,GAACJ,YAAP,EAAqBK,MAArB,KAA8B;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,gBAAL;AAAsB;AAClB,iCACOF,KADP;AACcH,UAAAA,QAAQ,EAACI,MAAM,CAACJ;AAD9B;AAEH;;AACD,SAAK,gBAAL;AAAsB;AACpB,YAAIM,IAAI,GAAGH,KAAK,CAACH,QAAjB;AACAM,QAAAA,IAAI,CAACC,GAAL,CAAS,UAASC,IAAT,EAAcC,KAAd,EAAoB;AACvB,cAAGL,MAAM,CAACM,EAAP,KAAcF,IAAI,CAACE,EAAtB,EAAyB;AACrBJ,YAAAA,IAAI,CAACK,MAAL,CAAYF,KAAZ,EAAkB,CAAlB;AACH;AACH,SAJJ;AAKE,iCACON,KADP;AAEKH,UAAAA,QAAQ,EAACM;AAFd;AAIH;;AACD,SAAK,aAAL;AAAmB;AACf,iCACOH,KADP;AACcF,UAAAA,UAAU,EAACG,MAAM,CAACH;AADhC;AAEH;;AACD;AACA,aAAOE,KAAP;AAtBJ;AAyBH,CA1BD;;AA6BA,eAAeD,mBAAf","sourcesContent":["\r\n\r\nconst initialState = {\r\n    contacts:[],\r\n    totalCount:[]\r\n}\r\n\r\nconst fetchContactReducer =(state=initialState, action)=>{\r\n    switch(action.type){\r\n        case 'FETCH_CONTACTS':{\r\n            return {\r\n                ...state, contacts:action.contacts };\r\n        }\r\n        case 'DELETE_CONTACT':{\r\n          var data = state.contacts;\r\n          data.map(function(user,index){\r\n                if(action.id === user.id){\r\n                    data.splice(index,1);\r\n                }\r\n             });\r\n            return {\r\n                ...state,\r\n                 contacts:data\r\n            }\r\n        }\r\n        case 'FETCH_COUNT':{\r\n            return {\r\n                ...state, totalCount:action.totalCount };\r\n        }\r\n        default:\r\n        return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default fetchContactReducer;"]},"metadata":{},"sourceType":"module"}