{"ast":null,"code":"import _defineProperty from \"/var/www/html/my-contact/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  age: 20,\n  history: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = _objectSpread({}, state);\n\n  console.log(action);\n\n  switch (action.type) {\n    case \"AGE_UP\":\n      //newState.age += action.value;\n      return _objectSpread({}, state, {\n        age: state.age + action.value,\n        history: state.history.concat({\n          age: state.age + action.value\n        })\n      });\n      break;\n\n    case \"AGE_DOWN\":\n      //newState.age += action.value;\n      return _objectSpread({}, state, {\n        age: state.age + action.value,\n        history: state.history.concat({\n          age: state.age + action.value\n        })\n      });\n      break;\n  }\n\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/my-contact/src/store/reducer.js"],"names":["initialState","age","history","reducer","state","action","newState","console","log","type","value","concat"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,EADc;AAEnBC,EAAAA,OAAO,EAAC;AAFW,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,QAAMC,QAAQ,qBAAQF,KAAR,CAAd;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAQA,MAAM,CAACI,IAAf;AAEE,SAAK,QAAL;AACE;AACA,+BACKL,KADL;AAEEH,QAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACK,KAFzB;AAGER,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAqB;AAACV,UAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACK;AAAxB,SAArB;AAHV;AAKA;;AAEF,SAAK,UAAL;AACE;AACA,+BACKN,KADL;AAEEH,QAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACK,KAFzB;AAGER,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAqB;AAACV,UAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACK;AAAxB,SAArB;AAHV;AAKA;AAlBJ;;AAoBA,SAAOJ,QAAP;AACD,CAxBD;;AA0BA,eAAeH,OAAf","sourcesContent":["const initialState = {\n  age: 20,\n  history:[]\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state };\n  console.log(action);\n  switch (action.type) {\n  \n    case \"AGE_UP\":\n      //newState.age += action.value;\n      return {\n        ...state,\n        age:state.age + action.value,\n        history:state.history.concat({age:state.age + action.value})\n      }\n      break;\n\n    case \"AGE_DOWN\":\n      //newState.age += action.value;\n      return {\n        ...state,\n        age:state.age + action.value,\n        history:state.history.concat({age:state.age + action.value})\n      }\n      break;\n  }\n  return newState;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}